version: '3.5'
services:
  nestjs:
    restart: always
    image: nickboomboomboom/doc-backend:0.0.1
    ports:
      - '${PORT}:3000'
    env_file:
      - .env # 从宿主机的 .env 文件读取环境变量
    volumes:
      - /Users/q.chen.work/Documents/test-app-data:/app # 将 NestJS 应用程序的数据挂载到宿主机
    depends_on:
      - mysql
    networks:
      - doc-server

  mysql:
    image: mysql:8.0
    ports:
      - '4000:3306'
    env_file:
      - .env # 从宿主机的 .env 文件读取环境变量
    volumes:
      - /Users/q.chen.work/Documents/test-mysql-data:/var/lib/mysql # 将 MySQL 数据挂载到宿主机
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - doc-server

# 声明一下网桥  my-server。
# 重要：将所有服务都挂载在同一网桥即可通过容器名来互相通信了
# 如nestjs连接mysql和redis，可以通过容器名来互相通信
networks:
  doc-server:
